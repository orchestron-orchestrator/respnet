# WARNING WARNING WARNING WARNING WARNING
# DO NOT MODIFY THIS FILE!! This file is generated!
# WARNING WARNING WARNING WARNING WARNING

import logging

import orchestron.device as odev
import orchestron.ttt as ttt
import yang.adata
import yang.gdata

from respnet.layers.y_0 import netinfra__netinfra__router_entry
from respnet.layers.y_0 import netinfra__netinfra__backbone_link_entry
from respnet.layers.y_0 import ietf_l3vpn_svc__l3vpn_svc__vpn_services__vpn_service_entry
from respnet.layers.y_0 import ietf_l3vpn_svc__l3vpn_svc__sites__site_entry

import respnet.cfs

def get_ttt(dev_mgr: odev.DeviceManager, log_handler: ?logging.Handler=None) -> proc(list[str])->ttt.Node:
    r = ttt.Container({"netinfra": ttt.Container({"router": ttt.List(ttt.Transform(respnet.cfs.Router, log_handler)), "backbone-link": ttt.List(ttt.Transform(respnet.cfs.BBLink, log_handler))}, ns='http://example.com/netinfra'), "l3vpn-svc": ttt.Container({"vpn-profiles": ttt.Container({"valid-provider-identifiers": ttt.Container({"cloud-identifier": ttt.List(ttt.Container({})), "encryption-profile-identifier": ttt.List(ttt.Container({})), "qos-profile-identifier": ttt.List(ttt.Container({})), "bfd-profile-identifier": ttt.List(ttt.Container({}))})}), "vpn-services": ttt.Container({"vpn-service": ttt.List(ttt.Transform(respnet.cfs.L3VpnVpnService, log_handler))}), "sites": ttt.Container({"site": ttt.List(ttt.Transform(respnet.cfs.L3VpnSite, log_handler))})}, ns='urn:ietf:params:xml:ns:yang:ietf-l3vpn-svc')}, ns='')
    return r
